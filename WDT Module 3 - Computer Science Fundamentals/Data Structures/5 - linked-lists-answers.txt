Exercises

1. What are some pros and cons of using linked lists instead of arrays?
Pros: No memory space wasted on placeholder elements, and memory allocated does not need to be contiguous allowing linked lists to become extremely large
Cons: All preceding nodes must be accessed in order before one can access the desired node

2. Come up with a real world example of a linked list
Over time it cab be difficult for an Operating System to find contiguous disk space sufficient to store large file so it usually splits these up into chunks across the physical hard drive and stores the locations of the file fragments stored as a linked list

Programming Questions

Before beginning to code, write out a plan explaining how to solve the question.

1. The Linked List push function should take a value, create a node, and add it to the end of a list. Below is a push function for a singly linked list. However, there is something wrong with it. Find the bug and fix the code.

LinkedList.prototype.push = function(element) {
 SET node = {
   value: element,
   next: null
 }

 IF the head node does not exist
   THEN SET head to node
 ELSE
   SET node.next to head
   SET head to node
 }
}

2. Given an unsorted singly linked list, remove all duplicates from the linked list.
Example
Input: a -> c -> d -> d -> a
Output: a -> c -> d

function Node(data) {
  this.data = data
  this.next = null
}

function removeDuplicates(head) {
  for (var node = head; node != null; node = node.next) {
    while (node.next && node.data == node.next.data) {
      node.next = node.next.next
    }
  }
  return head
}

3. Given an unsorted singly linked list, reverse it.
Example
Input: a -> b -> c -> d
Output: d -> c -> b -> a
